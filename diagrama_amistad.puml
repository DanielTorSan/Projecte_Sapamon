@startuml Sapamon - Sistema de Amistades

skinparam {
  BackgroundColor #FFFFFF
  BorderColor #000000
  ArrowColor #1A1A1A
  FontName Arial
}

' Definición de actores y componentes
actor Usuario as user
actor Amigo as friend

' Entidades principales
package "Sistema de Usuarios" {
  class UsuariModel {
    +obtenerUsuarioPorId(id)
    +obtenerUsuarioPorEmail(email)
    +buscarUsuariosPorNombre(nombre)
    +actualizarPerfil(datos)
    +actualizarAvatar(idUsuario, idAvatar)
  }
  
  class UsuariControlador {
    +perfil()
    +actualizar()
    +cambiarAvatar()
  }
}

package "Sistema de Amistades" {
  class AmicsModel {
    +obtenerAmigos(idUsuario)
    +obtenerSolicitudesPendientes(idUsuario)
    +enviarSolicitud(idRemitente, idDestinatario)
    +aceptarSolicitud(idSolicitud)
    +rechazarSolicitud(idSolicitud)
    +eliminarAmistad(idUsuario1, idUsuario2)
    +comprobarAmistad(idUsuario1, idUsuario2)
  }
  
  class AmicsControlador {
    +listar()
    +pendientes()
    +enviarSolicitud()
    +aceptar()
    +rechazar()
    +eliminar()
  }
  
  class search_users {
    +buscarUsuarios(termino)
  }
  
  class friend_action {
    +procesarAccion(accion, idDestino)
  }
  
  class gestiona_amistat {
    +procesarSolicitud(tipo, idSolicitud)
  }
  
  class eliminar_amigo {
    +eliminar(idAmigo)
  }
}

package "Sistema de Chat" {
  class ChatModel {
    +enviarMensaje(idRemitente, idDestinatario, mensaje)
    +obtenerMensajes(idUsuario1, idUsuario2)
    +marcarLeido(idMensaje)
    +obtenerMensajesNoLeidos(idUsuario)
  }
  
  class ChatControlador {
    +vista()
    +enviarMensaje()
    +obtenerConversacion()
    +comprobarNuevosMensajes()
  }
  
  class cargar_missatges {
    +obtenerMensajesConUsuario(idDestino)
  }
  
  class enviar_missatge {
    +enviarMensaje(idDestino, contenido)
  }
  
  class comprovar_missatges {
    +comprobarNuevosMensajes()
  }
}

' Base de datos
database "MySQL" {
  class usuaris {
    id
    nom
    email
    contrasenya
    avatar_id
    data_registre
    ultima_connexio
  }
  
  class amistats {
    id
    usuari1_id
    usuari2_id
    estat
    data_solicitud
    data_aceptacio
  }
  
  class missatges {
    id
    remitent_id
    destinatari_id
    contingut
    data_enviament
    llegit
  }
}

' Relaciones entre componentes
user --> UsuariControlador : interactúa
user --> AmicsControlador : gestiona amigos
user --> ChatControlador : chatea

UsuariControlador --> UsuariModel : usa
AmicsControlador --> AmicsModel : usa
ChatControlador --> ChatModel : usa

AmicsControlador --> search_users : usa
AmicsControlador --> friend_action : usa
AmicsControlador --> gestiona_amistat : usa
AmicsControlador --> eliminar_amigo : usa

ChatControlador --> cargar_missatges : usa
ChatControlador --> enviar_missatge : usa
ChatControlador --> comprovar_missatges : usa

UsuariModel --> usuaris : consulta/actualiza
AmicsModel --> amistats : consulta/actualiza
AmicsModel --> usuaris : consulta
ChatModel --> missatges : consulta/actualiza
ChatModel --> amistats : consulta

' Flujo de usuario
user --> friend : envía solicitud
friend --> user : acepta/rechaza

' Estados de amistad
enum EstadoAmistad {
  PENDIENTE
  ACEPTADA
  RECHAZADA
}

amistats --> EstadoAmistad : tiene

' Notas explicativas
note right of AmicsModel
  Gestiona todas las operaciones relacionadas
  con el sistema de amistades entre usuarios
end note

note right of ChatModel
  Permite la comunicación privada
  entre usuarios que son amigos
end note

note bottom of amistats
  Una relación de amistad requiere confirmación
  por parte del usuario que recibe la solicitud
end note

@enduml